variables:
  fileName: &fileName
    "cutting-field-vmc-fixed-leader"
  path: &path
    "data/cutting-field-vmc-fixed-leader"
  cloningRange: &cloningRange
    formula: 5
  gaussianShape: &gaussianShape
    5
  leaderRadius: &leaderRadius
    100.0
  maxChildren: &maxChildren
    3.0
  #OPTIMIZED PARAMETERS
  maxResource: &maxResource
   272.4515051831913
  #    267.8281934253056
  maxSuccess: &maxSuccess
    323.396898398807
    #401.3085404073488
  resourceLowerBound: &resourceLowerBound
    4.458599742599371
    #4.181794181383088
  origin: &origin
    type: LinearVariable
    parameters: [ 10.0, 0.1, 50.0, 3.0 ]
  killingRange: &killingRange
    60
  width: &width
    0
  height: &height
    60
  range: &range
    formula: cloningRange * 1.01
  seed: &seed
    min: 0
    max:
      formula: System.getenv("MAX_SEED").toDouble()
      language: kotlin
    step: 1
    default: 0

network-model:
  type: ConnectWithinDistance
  parameters: *range

seeds:
  scenario: *seed
  simulation: *seed

layers:
  - type: BidimensionalGaussianLayer
    parameters: [0, 25, *maxSuccess, *gaussianShape]
    molecule: successSource

incarnation: collektive

_pool: &program
  - time-distribution: 1
    type: Event
    actions:
      - type: RunCollektiveProgram
        parameters: [it.unibo.collektive.vmc.FieldVMCFixedLeaderKt.fixedRootStability]
  - time-distribution:
      type: Trigger
      parameters: [ 500 ]
    type: Event
    actions:
      - type: RemoveNodes
        parameters: [ *killingRange, *origin, *width, *height ]

deployments:
  - type: Point
    parameters: [0, 0]
    programs:
      - *program
    contents:
      - molecule: leader
        concentration: true
    properties:
      - type: it.unibo.collektive.alchemist.device.sensors.impl.LayerProperty
      - type: it.unibo.collektive.alchemist.device.sensors.impl.RandomNodeProperty
      - type: it.unibo.collektive.alchemist.device.sensors.impl.LocationSensorProperty
      - type: it.unibo.collektive.alchemist.device.sensors.impl.SuccessSensorProperty
        parameters: [ *maxSuccess ]
      - type: it.unibo.collektive.alchemist.device.sensors.impl.LeaderSensorProperty
        parameters: [ *leaderRadius ]
      - type: it.unibo.collektive.alchemist.device.sensors.impl.ResourceSensorProperty
        parameters: [*resourceLowerBound, *maxResource]
      - type: it.unibo.collektive.alchemist.device.sensors.impl.DeviceSpawner
        parameters: [ *cloningRange, *maxChildren ]

export:
  - type: CSVExporter
    parameters:
      fileNameRoot: *fileName
      interval: 1.0
      exportPath: *path
    data:
      - time
      - type: NumberOfNodes
      - type: NetworkHub
      - type: NumberOfLeaves
      - type: NetworkDensity
      - type: NetworkDiameter
        parameters:
          filter: onlyfinite
          aggregators: [ max, mean, median ]
      - type: NodeDegree
        parameters:
          filter: onlyfinite
          aggregators: [ max, mean, variance, median, StandardDeviation ]
      - molecule: children-count
        aggregators: [ max, mean, variance, median, StandardDeviation ]
        value-filter: onlyfinite
        precision: 3
      - molecule: local-success
        aggregators: [ max, mean, variance, median, StandardDeviation ]
        value-filter: onlyfinite
        precision: 3
      - molecule: resource
        aggregators: [ max, mean, variance, median, StandardDeviation ]
        value-filter: onlyfinite
        precision: 3
      - molecule: success
        aggregators: [ max, mean, variance, median, StandardDeviation ]
        value-filter: onlyfinite
        precision: 3
      - molecule: local-resource
        aggregators: [ max, mean, variance, median, StandardDeviation ]
        value-filter: onlyfinite
        precision: 3
